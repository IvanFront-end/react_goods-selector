{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","selectedItem","item","setState","clearItem","this","className","classNames","type","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"2PAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAQ,CACNC,aAAc,OAFlB,EAKEC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEH,aAAcE,KANlC,EASEE,UAAY,WACV,EAAKD,SAAS,CAAEH,aAAc,MAVlC,4CAaE,WAA2B,IAAD,OAChBA,EAAiBK,KAAKN,MAAtBC,aAER,OACE,uBAAMM,UAAU,oBAAhB,UACE,qBACEA,UAAWC,IACT,QACA,CACE,gCAAiCP,IAJvC,UAQGA,EAAY,UACNA,EADM,gBAET,oBAEHA,GAEC,wBACE,UAAQ,cACRQ,KAAK,SACLF,UAAU,cACVG,QAAS,kBAAM,EAAKL,kBAK1B,uBAAOE,UAAU,QAAjB,SACE,gCACGT,EAAMa,KAAI,SAACC,GAAD,OACT,qBACE,UAAQ,OACRL,UAAWC,IACT,CAAE,+BAAgCI,IAASX,IAH/C,UAOE,6BACE,wBACE,UAASW,IAASX,EACd,eACA,YACJQ,KAAK,SACLF,UAAWC,IACT,SACA,CAAE,UAAWI,IAASX,IAExBS,QAAS,kBAAM,EAAKR,aAClBD,IAAiBW,EAAO,GAAKA,IAVjC,SAaGA,IAASX,EAAe,IAAM,QAInC,oBAAI,UAAQ,YAAYM,UAAU,eAAlC,SACGK,qBAtEnB,GAAyBC,aCnBzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6a1d4413.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  selectedGood: string;\n}\n\nexport class App extends Component<{}, State> {\n  state = {\n    selectedGood: 'Jam',\n  };\n\n  selectedItem = (item: string) => {\n    this.setState({ selectedGood: item });\n  };\n\n  clearItem = () => {\n    this.setState({ selectedGood: '' });\n  };\n\n  render(): React.ReactNode {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        <h1\n          className={classNames(\n            'title',\n            {\n              'is-flex is-align-items-center': selectedGood,\n            },\n          )}\n        >\n          {selectedGood\n            ? `${selectedGood} is selected`\n            : 'No goods selected'}\n\n          {selectedGood && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"ClearButton\"\n              type=\"button\"\n              className=\"delete ml-3\"\n              onClick={() => this.clearItem()}\n            />\n          )}\n        </h1>\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map((good) => (\n              <tr\n                data-cy=\"Good\"\n                className={classNames(\n                  { 'has-background-success-light': good === selectedGood },\n                )}\n              >\n\n                <td>\n                  <button\n                    data-cy={good === selectedGood\n                      ? 'RemoveButton'\n                      : 'AddButton'}\n                    type=\"button\"\n                    className={classNames(\n                      'button',\n                      { 'is-info': good === selectedGood },\n                    )}\n                    onClick={() => this.selectedItem(\n                      selectedGood === good ? '' : good,\n                    )}\n                  >\n                    {good === selectedGood ? '-' : '+'}\n                  </button>\n                </td>\n\n                <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                  {good}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}